// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  createdAt DateTime? @default(now())
}

model Book {
  id               String      @id @default(cuid())
  title            String      @unique @default("")
  year             String      @default("")
  genre            String      @default("")
  price            Int         @default(0)
  avatar_filesize  Int?
  avatar_extension String?
  avatar_width     Int?
  avatar_height    Int?
  avatar_id        String?
  author           Author?     @relation("Book_author", fields: [authorId], references: [id])
  authorId         String?     @map("author")
  orderitem        OrderItem[] @relation("OrderItem_product")
  description      String      @default("")

  @@index([authorId])
}

model Author {
  id    String @id @default(cuid())
  name  String @default("")
  age   String @default("")
  books Book[] @relation("Book_author")
}

model OrderItem {
  id         String    @id @default(cuid())
  quantity   Int       @default(0)
  product    Book?     @relation("OrderItem_product", fields: [productId], references: [id])
  productId  String?   @map("product")
  customer   Customer? @relation("OrderItem_customer", fields: [customerId], references: [id])
  customerId String?   @map("customer")
  order      Order[]   @relation("Order_cart")

  @@index([productId])
  @@index([customerId])
}

model Order {
  id         String      @id @default(cuid())
  cart       OrderItem[] @relation("Order_cart")
  customer   Customer?   @relation("Order_customer", fields: [customerId], references: [id])
  customerId String?     @map("customer")
  address    Address?    @relation("Address_order")
  totalprice Int         @default(0)
  createdAt  DateTime?   @default(now())

  @@index([customerId])
}

model Customer {
  id         String      @id @default(cuid())
  name       String      @default("")
  email      String      @unique @default("")
  orderitems OrderItem[] @relation("OrderItem_customer")
  orders     Order[]     @relation("Order_customer")
  address    Address[]   @relation("Address_customer")
  createdAt  DateTime?   @default(now())
}

model Address {
  id         String    @id @default(cuid())
  country    String    @default("")
  city       String    @default("")
  street     String    @default("")
  build      String    @default("")
  index      String    @default("")
  customer   Customer? @relation("Address_customer", fields: [customerId], references: [id])
  customerId String?   @map("customer")
  order      Order?    @relation("Address_order", fields: [orderId], references: [id])
  orderId    String?   @unique @map("order")

  @@index([customerId])
}
